apiVersion: v1
kind: Namespace
metadata:
  name: bitcoin-hooks-staging
---
apiVersion: v1
kind: Service
metadata:
  name: bitcoin-hooks
  namespace: bitcoin-hooks-staging
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: NodePort
  selector:
    app: webapp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp
  namespace: bitcoin-hooks-staging
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - image: zapgo/bitcoin-hooks:0.002
        imagePullPolicy: IfNotPresent
        name: bitcoin-hooks
        ports:
        - containerPort: 8000
        command: ['/bin/sh','-c', 'gunicorn config.wsgi:application --config file:config/gunicorn.py']
        envFrom:
          - secretRef:
              name: bitcoin-hooks
          - configMapRef:
              name: bitcoin-hooks
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 5
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bitcoin-hooks
  namespace: bitcoin-hooks-staging
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "gce"
spec:
  tls:
  - hosts:
    - staging.bitcoinhooks.rehive.com
    - www.staging.bitcoinhooks.rehive.com
    secretName: bitcoin-hooks-tls
  rules:
  - host: staging.bitcoinhooks.rehive.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: bitcoin-hooks
          servicePort: 80
  - host: www.staging.bitcoinhooks.rehive.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: bitcoin-hooks
          servicePort: 80